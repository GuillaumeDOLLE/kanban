!function(){var t={base_url:"http://localhost:5000",hideModals(){const t=document.querySelectorAll(".modal");for(const e of t)e.classList.remove("is-active")}};const e={makeLabelInDOM(t){const e=document.createElement("span");e.dataset.tagId=t.id,e.textContent=t.name,e.classList.add("tag"),e.style.backgroundColor=t.color;const a=t.card_has_label.card_id;document.querySelector(`[data-card-id="${a}"]`).querySelector(".tags").appendChild(e)},async showAddLabelModal(a){const s=document.getElementById("associate-label-to-card");s.classList.add("is-active");const o=a.target.closest("[data-card-id]");s.querySelector('[name="card_id"]').value=o.dataset.cardId;try{const a=await fetch(t.base_url+"/labels");if(200!==a.status)throw new Error("Impossible de r\xe9cup\xe9rer les labels. Statut: "+a.status);const o=await a.json(),d=s.querySelector(".labels-list-container");d.textContent="";for(const t of o){const a=document.createElement("span");a.dataset.tagId=t.id,a.textContent=t.name,a.classList.add("tag"),a.style.backgroundColor=t.color,a.addEventListener("click",e.handleAssociateLabel),d.appendChild(a)}}catch(d){alert(d)}},async handleAssociateLabel(a){const s=a.target,o=s.dataset.tagId,d=s.closest("#associate-label-to-card"),r=d.querySelector('[name="card_id"]').value,c=new FormData;c.set("label_id",o);try{const a=await fetch(`${t.base_url}/cards/${r}/label`,{method:"POST",body:c});if(200!==a.status){if(400===a.status)return void d.classList.remove("is-active");throw new Error("Impossible d'associer le label. Statut: "+a.status)}const s=await a.json();document.querySelector(`[data-card-id="${r}"]`).querySelector(".tags").textContent="";for(const t of s.labels)e.makeLabelInDOM(t);d.classList.remove("is-active")}catch(l){alert(l)}}};var a=e;const s={showAddCardModal(t){const e=t.target.closest("[data-list-id]").dataset.listId,a=document.getElementById("addCardModal");a.querySelector('input[name="list_id"]').value=e,a.querySelector('[name="color"]').value="#ffffff",a.classList.add("is-active")},async handleAddCardForm(e){e.preventDefault();const a=e.target,o=new FormData(a);console.log(Object.fromEntries(o));try{const e=await fetch(t.base_url+"/cards",{method:"POST",body:o});if(200===!e.status)throw new Error(e.status);const a=await e.json();s.makeCardInDOM(a)}catch(d){alert("Impossible de cr\xe9er la nouvelle carte. Statut: "+d)}t.hideModals(),a.reset()},makeCardInDOM(t){const e=document.getElementById("card-template"),o=document.importNode(e.content,!0);o.getElementById("card-content").textContent=t.title,o.querySelector("[data-card-id]").dataset.cardId=t.id;const d=o.querySelector(".box");d.style.backgroundColor=t.color;const r=document.querySelector(`[data-list-id="${t.list_id}"]`);d.querySelector(".edit-card-icon").addEventListener("click",s.showEditCardForm);const c=d.querySelector(".edit-form");c.querySelector('[name="color"]').value=t.color,d.querySelector(".delete-card-icon").addEventListener("click",s.handleDeleteCard),d.querySelector(".associate-label-icon").addEventListener("click",a.showAddLabelModal),c.querySelector('[name="card-id"]').value=t.id,c.addEventListener("submit",s.handleEditCardForm),r.querySelector(".panel-block").appendChild(o)},showEditCardForm(t){const e=t.target.closest(".box"),a=e.querySelector("#card-content");a.classList.add("is-hidden");const s=e.querySelector(".edit-form");s.querySelector('[name="title"]').value=a.textContent,console.log(s.querySelector('[name="color"]')),s.classList.remove("is-hidden")},async handleEditCardForm(e){e.preventDefault();const a=e.target,s=new FormData(a);console.log(Object.fromEntries(s));const o=s.get("card-id"),d=a.closest(".box"),r=d.querySelector("#card-content");try{const e=await fetch(`${t.base_url}/cards/${o}`,{method:"PATCH",body:s});if(200!==e.status)throw new Error("Impossible d'\xe9diter le contenu de cette carte. Statut: "+e.status);const c=s.get("title"),l=s.get("color");r.textContent=c,d.style.backgroundColor=l,a.classList.add("is-hidden"),r.classList.remove("is-hidden")}catch(c){alert(c),a.classList.add("is-hidden"),r.classList.remove("is-hidden")}},async handleDeleteCard(e){const a=e.target.closest(".box"),s=a.dataset.cardId;try{const e=await fetch(`${t.base_url}/cards/${s}`,{method:"DELETE"});if(200!==e.status)throw new Error("Impossible de supprimer cette carte. Statut: "+e.status);a.remove()}catch(o){alert(o)}},async handleDragCard(t){const e=t.target.querySelectorAll("[data-card-id]");if(s.updateAllCardsFromOneList(e),t.from!==t.to){const e=t.to,a=e.closest("[data-list-id]").dataset.listId,o=e.querySelectorAll("[data-card-id]");s.updateAllCardsFromOneList(o,a)}},async updateAllCardsFromOneList(e,a){e.forEach(async(e,s)=>{const o=new FormData;o.set("position",s),a&&o.set("list_id",a);const d=e.dataset.cardId;try{const e=await fetch(`${t.base_url}/cards/${d}`,{method:"PATCH",body:o});if(200!==e.status)throw new Error(`Impossible de mettre \xe0 jourla position de la liste avec l'id ${a}. Statut: ${e.status}`)}catch(r){alert(r)}})}};var o=s;const d={showAddListModal(){document.getElementById("addListModal").classList.add("is-active")},showEditListForm(t){const e=t.target;e.classList.add("is-hidden");const a=e.closest("[data-list-id]").querySelector("form");a.querySelector('[name="name"]').value=e.textContent,a.classList.remove("is-hidden")},async handleAddListForm(e){e.preventDefault();const a=e.target,s=new FormData(a);try{const e=await fetch(t.base_url+"/lists",{method:"POST",body:s});if(200===!e.status)throw new Error(e.status);const a=await e.json();d.makeListInDOM(a)}catch(o){alert("Impossible de cr\xe9er la nouvelle liste. Statut: "+o)}t.hideModals(),a.reset()},makeListInDOM(t){const e=document.getElementById("list-template"),a=document.importNode(e.content,!0),s=t.name,r=a.querySelector("h2");r.textContent=s,a.querySelector("[data-list-id]").dataset.listId=t.id,a.querySelector(".add-card--button").addEventListener("click",o.showAddCardModal),a.querySelector(".delete-list-icon").addEventListener("click",d.handleDeleteList),r.addEventListener("dblclick",d.showEditListForm);const c=a.querySelector(".edit-form");c.addEventListener("submit",d.handleEditListForm),c.querySelector('[name="list-id"]').value=t.id;const l=a.querySelector(".panel-block");Sortable.create(l,{group:"list",onEnd:o.handleDragCard}),document.getElementById("lists-container").appendChild(a)},async handleEditListForm(e){e.preventDefault();const a=e.target,s=new FormData(a),o=s.get("list-id"),d=a.closest("[data-list-id]").querySelector("h2");try{const e=await fetch(`${t.base_url}/lists/${o}`,{method:"PATCH",body:s});if(200!==e.status)throw new Error("Impossible d'\xe9diter le nom de cette liste. Statut: "+e.status);const r=s.get("name");d.textContent=r,a.classList.add("is-hidden"),d.classList.remove("is-hidden")}catch(r){alert(r),a.classList.add("is-hidden"),d.classList.remove("is-hidden")}},async handleDeleteList(e){if(!confirm("\xcates-vous s\xfbr de vouloir supprimer cette liste ?"))return;const a=e.target.closest("[data-list-id]"),s=a.dataset.listId;try{const e=await fetch(`${t.base_url}/lists/${s}`,{method:"DELETE"});if(200!==e.status)throw new Error("Impossible de supprimer cette liste. Statut: "+e.status);a.remove()}catch(o){alert(o)}},async handleDragList(){document.querySelectorAll("[data-list-id]").forEach(async(e,a)=>{const s=new FormData;s.set("position",a);const o=e.dataset.listId;try{const e=await fetch(`${t.base_url}/lists/${o}`,{method:"PATCH",body:s});if(200!==e.status)throw new Error(`Impossible de mettre \xe0 jourla position de la liste avec l'id ${o}. Statut: ${e.status}`)}catch(d){alert(d)}})}};var r=d,c={init:function(){console.log("app.init !"),c.addListenerToActions(),c.getListsFromAPI()},addListenerToActions(){document.getElementById("addListButton").addEventListener("click",r.showAddListModal);const e=document.querySelectorAll(".close");for(const s of e)s.addEventListener("click",t.hideModals);document.querySelector("#addListModal form").addEventListener("submit",r.handleAddListForm);const a=document.querySelectorAll(".add-card--button");for(const t of a)t.addEventListener("click",o.showAddCardModal);document.querySelector("#addCardModal form").addEventListener("submit",o.handleAddCardForm)},async getListsFromAPI(){try{const e=await fetch(t.base_url+"/lists");if(!e.ok)throw new Error(e.status);const s=await e.json();for(const t of s){r.makeListInDOM(t);for(const e of t.cards){o.makeCardInDOM(e);for(const t of e.labels)a.makeLabelInDOM(t)}}const d=document.getElementById("lists-container");Sortable.create(d,{onEnd:r.handleDragList})}catch(e){alert("Impossible de r\xe9cup\xe9rer les listes depuis l'API. Statut: "+e)}}};document.addEventListener("DOMContentLoaded",c.init)}();